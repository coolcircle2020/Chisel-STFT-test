;buildInfoPackage: chisel3, version: 3.3.1, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit Hanning : 
  module Hanning : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip signal : {flip ready : UInt<1>, valid : UInt<1>, bits : {value : Fixed<32><<16>>}}, flip cosines : {flip ready : UInt<1>, valid : UInt<1>, bits : {value : Fixed<32><<16>>}}, HanningSignal : {flip ready : UInt<1>, valid : UInt<1>, bits : {value : Fixed<32><<16>>}}}
    
    cmem cosinesbank : {value : Fixed<32><<16>>}[720] @[Hanning.scala 20:28]
    reg cosinesbank_wcnt : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Hanning.scala 21:33]
    reg cosinesbank_rcnt : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Hanning.scala 22:33]
    node _T = and(io.cosines.valid, io.cosines.ready) @[Hanning.scala 23:25]
    when _T : @[Hanning.scala 23:45]
      node _T_1 = add(cosinesbank_wcnt, UInt<1>("h01")) @[Hanning.scala 24:42]
      node _T_2 = tail(_T_1, 1) @[Hanning.scala 24:42]
      cosinesbank_wcnt <= _T_2 @[Hanning.scala 24:22]
      node _T_3 = bits(cosinesbank_wcnt, 9, 0)
      write mport _T_4 = cosinesbank[_T_3], clock
      _T_4.value <= io.cosines.bits.value
      skip @[Hanning.scala 23:45]
    node _T_5 = lt(cosinesbank_wcnt, UInt<10>("h02d0")) @[Hanning.scala 27:61]
    node _T_6 = and(io.cosines.valid, _T_5) @[Hanning.scala 27:40]
    io.cosines.ready <= _T_6 @[Hanning.scala 27:20]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Hanning.scala 31:22]
    node _T_7 = eq(state, UInt<2>("h00")) @[Hanning.scala 33:14]
    when _T_7 : @[Hanning.scala 33:25]
      node _T_8 = and(io.signal.valid, io.signal.ready) @[Hanning.scala 34:26]
      node _T_9 = lt(cosinesbank_rcnt, UInt<9>("h0140")) @[Hanning.scala 34:64]
      node _T_10 = and(_T_8, _T_9) @[Hanning.scala 34:45]
      when _T_10 : @[Hanning.scala 34:71]
        state <= UInt<2>("h01") @[Hanning.scala 35:13]
        skip @[Hanning.scala 34:71]
      else : @[Hanning.scala 36:77]
        node _T_11 = and(io.signal.valid, io.signal.ready) @[Hanning.scala 36:32]
        node _T_12 = lt(cosinesbank_rcnt, UInt<10>("h0200")) @[Hanning.scala 36:70]
        node _T_13 = and(_T_11, _T_12) @[Hanning.scala 36:51]
        when _T_13 : @[Hanning.scala 36:77]
          state <= UInt<2>("h02") @[Hanning.scala 37:13]
          skip @[Hanning.scala 36:77]
      skip @[Hanning.scala 33:25]
    else : @[Hanning.scala 39:32]
      node _T_14 = eq(state, UInt<2>("h01")) @[Hanning.scala 39:20]
      when _T_14 : @[Hanning.scala 39:32]
        node _T_15 = and(io.signal.valid, io.signal.ready) @[Hanning.scala 40:26]
        node _T_16 = lt(cosinesbank_rcnt, UInt<9>("h0140")) @[Hanning.scala 40:64]
        node _T_17 = and(_T_15, _T_16) @[Hanning.scala 40:45]
        when _T_17 : @[Hanning.scala 40:71]
          state <= UInt<2>("h01") @[Hanning.scala 41:13]
          skip @[Hanning.scala 40:71]
        else : @[Hanning.scala 42:77]
          node _T_18 = and(io.signal.valid, io.signal.ready) @[Hanning.scala 42:32]
          node _T_19 = lt(cosinesbank_rcnt, UInt<10>("h0200")) @[Hanning.scala 42:70]
          node _T_20 = and(_T_18, _T_19) @[Hanning.scala 42:51]
          when _T_20 : @[Hanning.scala 42:77]
            state <= UInt<2>("h02") @[Hanning.scala 43:13]
            skip @[Hanning.scala 42:77]
          else : @[Hanning.scala 44:16]
            state <= UInt<2>("h00") @[Hanning.scala 45:13]
            skip @[Hanning.scala 44:16]
        skip @[Hanning.scala 39:32]
      else : @[Hanning.scala 47:37]
        node _T_21 = eq(state, UInt<2>("h02")) @[Hanning.scala 47:20]
        when _T_21 : @[Hanning.scala 47:37]
          node _T_22 = and(io.HanningSignal.ready, io.HanningSignal.valid) @[Hanning.scala 48:35]
          node _T_23 = lt(cosinesbank_rcnt, UInt<10>("h0200")) @[Hanning.scala 48:81]
          node _T_24 = and(_T_22, _T_23) @[Hanning.scala 48:61]
          when _T_24 : @[Hanning.scala 48:89]
            state <= UInt<2>("h02") @[Hanning.scala 49:15]
            skip @[Hanning.scala 48:89]
          else : @[Hanning.scala 50:18]
            state <= UInt<2>("h00") @[Hanning.scala 51:15]
            skip @[Hanning.scala 50:18]
          skip @[Hanning.scala 47:37]
    reg hanning_signal : {value : Fixed<32><<16>>}, clock @[Hanning.scala 55:27]
    reg cosine_value : {value : Fixed<32><<16>>}, clock @[Hanning.scala 56:27]
    io.HanningSignal.bits.value <= hanning_signal.value @[Hanning.scala 58:25]
    node _T_25 = eq(state, UInt<2>("h00")) @[Hanning.scala 60:14]
    when _T_25 : @[Hanning.scala 60:25]
      node _T_26 = and(io.HanningSignal.ready, io.signal.valid) @[Hanning.scala 61:47]
      io.signal.ready <= _T_26 @[Hanning.scala 61:21]
      io.HanningSignal.valid <= UInt<1>("h00") @[Hanning.scala 62:28]
      node _T_27 = bits(cosinesbank_rcnt, 9, 0) @[Hanning.scala 63:38]
      read mport _T_28 = cosinesbank[_T_27], clock @[Hanning.scala 63:38]
      cosine_value.value <= _T_28.value @[Hanning.scala 63:18]
      node _T_29 = eq(cosinesbank_rcnt, UInt<10>("h0201")) @[Hanning.scala 64:27]
      when _T_29 : @[Hanning.scala 64:37]
        cosinesbank_rcnt <= UInt<1>("h00") @[Hanning.scala 64:54]
        skip @[Hanning.scala 64:37]
      skip @[Hanning.scala 60:25]
    else : @[Hanning.scala 65:32]
      node _T_30 = eq(state, UInt<2>("h01")) @[Hanning.scala 65:20]
      when _T_30 : @[Hanning.scala 65:32]
        node _T_31 = add(cosinesbank_rcnt, UInt<1>("h01")) @[Hanning.scala 66:42]
        node _T_32 = tail(_T_31, 1) @[Hanning.scala 66:42]
        cosinesbank_rcnt <= _T_32 @[Hanning.scala 66:22]
        node _T_33 = bits(cosinesbank_rcnt, 9, 0) @[Hanning.scala 67:37]
        read mport _T_34 = cosinesbank[_T_33], clock @[Hanning.scala 67:37]
        cosine_value.value <= _T_34.value @[Hanning.scala 67:18]
        node _T_35 = mul(io.signal.bits.value, cosine_value.value) @[Hanning.scala 68:50]
        hanning_signal.value <= _T_35 @[Hanning.scala 68:26]
        io.signal.ready <= io.HanningSignal.ready @[Hanning.scala 69:21]
        io.HanningSignal.valid <= UInt<1>("h01") @[Hanning.scala 70:28]
        skip @[Hanning.scala 65:32]
      else : @[Hanning.scala 71:37]
        node _T_36 = eq(state, UInt<2>("h02")) @[Hanning.scala 71:20]
        when _T_36 : @[Hanning.scala 71:37]
          node _T_37 = add(cosinesbank_rcnt, UInt<1>("h01")) @[Hanning.scala 72:42]
          node _T_38 = tail(_T_37, 1) @[Hanning.scala 72:42]
          cosinesbank_rcnt <= _T_38 @[Hanning.scala 72:22]
          hanning_signal.value <= asFixedPoint(UInt<32>("h00"), 16) @[Hanning.scala 73:26]
          io.signal.ready <= UInt<1>("h00") @[Hanning.scala 74:21]
          io.HanningSignal.valid <= UInt<1>("h01") @[Hanning.scala 75:28]
          skip @[Hanning.scala 71:37]
        else : @[Hanning.scala 76:14]
          io.signal.ready <= UInt<1>("h01") @[Hanning.scala 77:21]
          io.HanningSignal.valid <= UInt<1>("h00") @[Hanning.scala 78:28]
          skip @[Hanning.scala 76:14]
    
